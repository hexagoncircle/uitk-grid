@import url("https://fonts.googleapis.com/css?family=Roboto:300,400,400i,500");
@baseFont: "Roboto", Arial, sans-serif;
@codeFont: Monaco, Consolas, monospace;

@bpXs: 450px;
@bpSm: 600px;
@bpMd: 770px;
@bpLg: 900px;

@colorSlateDark: #152835;
@colorGrayscale1: #f0f1f3;

@baseFontSize: 15px;
@baseFontColor: @colorSlateDark;
@baseLineHeight: 1.6;
@baseMargin: 24px;
@baseBorderRadius: 3px;

// ===================================================
// FlexLess Grid System
// ===================================================
@gridGapSize: 12px;
@gridGapTightenSize: @gridGapSize / 1.5;
@gridGapLoosenSize: @gridGapSize * 1.5;
@gridMarginLarge: 24px;
@gridMarginSmall: 6px;

@cols: 12;
@bp: -lg @bpLg, -md @bpMd, -sm @bpSm, -xs @bpXs;
@gaps: loosen @gridGapLoosenSize, default @gridGapSize,
  tighten @gridGapTightenSize, none 0;
@alignX: flex-start, center, flex-end, space-around, space-between;
@alignY: flex-start, center, flex-end;

uitk-grid {
  display: flex;
  flex-wrap: wrap;
  margin: -@gridGapSize 0 @baseMargin -@gridGapSize;
  
  & &:last-child {
    margin-bottom: 0;
  }
  
  &[attach-grid] {
    margin-bottom: @gridGapSize;
  }
}

uitk-col {
  &[span] {
    position: relative;
    padding: @gridGapSize 0 0 @gridGapSize;
  }
}

.grid-gaps(@vals, @attr, @i: 1) when (@i <= length(@vals)) {
  @val:  extract(extract(@vals, @i), 1);
  @size: extract(extract(@vals, @i), 2);

  [@{attr}="@{val}"] {
    margin: -@size 0 @baseMargin -@size;
    
    &[attach-grid] {
      margin-bottom: @size;
    }

    > uitk-col {
      padding: @size 0 0 @size;
    }
  }
}

.grid-alignments(@vals, @attr, @i: 1) when (@i <= length(@vals)) {
  @val: extract(@vals, @i);
  
  [@{attr}="@{val}"] {
    & when (@vals = @alignX) {
      justify-content: @val;
    }
    & when (@vals = @alignY) {
      align-items: @val;
    }
  }
}

.grid-attrs(@n, @bp, @i: 1) when (@i <= @n) {
  @width: percentage(@i / @n);
  @span: ~"span@{bp}";
  @push: ~"push@{bp}";
  @reset: ~"push-reset@{bp}";
  @gap: ~"gap@{bp}";
  @x: ~"align-x@{bp}";
  @y: ~"align-y@{bp}";
  @order: ~"order@{bp}";
  @reverse: ~"reverse@{bp}";

  [@{span}="@{i}"] {
    flex-basis: @width;
    max-width: @width;
  }
  
  [@{push}="@{i}"]  { margin-left: @width; }
  [@{order}="@{i}"] { order: @i; }
  [@{reset}]        { margin-left: 0; }
  [@{reverse}]      { flex-direction: row-reverse; }

  .grid-alignments(@alignX, @x, @i);
  .grid-alignments(@alignY, @y, @i);
  .grid-gaps(@gaps, @gap, @i);
  .grid-attrs(@n, @bp, (@i + 1));
}

.grid-attrs(@cols, "");

.grid-bps(@n: length(@bp), @i: 1) when (@i <= length(@bp)) {
  @media screen and (max-width: extract(extract(@bp, @i), 2)) {
    .grid-attrs(@cols, extract(extract(@bp, @i), 1));
  }
  
  .grid-bps(@n, (@i + 1));
}

.grid-bps();

// ===================================================

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: @baseFont;
  font-size: @baseFontSize;
  line-height: @baseLineHeight;
  color: @colorSlateDark;
  background-color: @colorGrayscale1;
  -webkit-text-size-adjust: 100%;
  -webkit-overflow-scrolling: touch;
}

section {
  margin-bottom: 60px;
}

h1 {
  font-size: 2rem;
}
h2 {
  font-size: 1.6rem;
}
h1,
h2,
h3 {
  font-weight: 400;
}
h1,
h2,
h3,
p {
  margin-bottom: @baseMargin;
}

strong {
  font-weight: 500;
}

@tagColor: white;
@tagColorAlt: #152835;
@tagBorderColor: #bec6cd;
@tagTextColor: #152835;

pre[class*="language"] {
  margin-bottom: @baseMargin;
  font-size: 0.88em;
}

code:not([class*="language"]) {
  display: inline-block;
  vertical-align: middle;
  padding: 0 0.35rem;
  font-size: @baseFontSize / 1.3;
  font-family: @codeFont;
  color: @tagTextColor;
  background-color: @tagColor;
  border: 1px solid @tagBorderColor;
  border-radius: @baseBorderRadius;
}

@siteContentPadding: @baseMargin;
@siteContentPaddingLg: @baseMargin * 2;
@siteContentMargin: 60px;
@siteContentWidth: 1000px;

.site-content {
  margin: @siteContentMargin auto;
  padding-right: @siteContentPadding;
  padding-left: @siteContentPadding;
  max-width: @siteContentWidth;

  @media (min-width: @bpMd) {
    padding-right: @siteContentPaddingLg;
    padding-left: @siteContentPaddingLg;
  }
}

// Test demo content
@colContentColor: #485f71;
@colContentColorAlt: fade(#bec6cd, 50%);

.demo-content {
  padding: 16px 0;
  font-size: 1rem;
  text-align: center;
  color: white;
  background-color: @colContentColor;
  border-radius: @baseBorderRadius;
  overflow: hidden;

  .demo-content {
    background-color: @colContentColorAlt;
  }
}

.demo-content-padded {
  padding: 16px;
}
.demo-content-expand {
  min-height: 8rem;
}
